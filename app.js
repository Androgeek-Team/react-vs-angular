/*! risk-register 2014-05-09 23:03:25 */
var Dialog=React.createClass({componentDidMount:function(){jQuery(this.getDOMNode()).modal({backdrop:"static",keyboard:!0,show:!1})},componentWillUnmount:function(){jQuery(this.getDOMNode()).off("hidden",this.handleHidden)},close:function(){jQuery(this.getDOMNode()).modal("hide")},open:function(){jQuery(this.getDOMNode()).modal("show")},render:function(){var a=null,b=null;return this.props.confirm&&(a=React.DOM.button({onClick:this.handleConfirm,className:"btn btn-primary"},this.props.confirm)),this.props.cancel&&(b=React.DOM.button({onClick:this.handleCancel,className:"btn"},this.props.cancel)),this.props.extraModalClass="undefined"==typeof this.props.extraModalClass?"":" "+this.props.extraModalClass,React.DOM.div({className:"modal fade"},[React.DOM.div({className:"modal-dialog"+this.props.extraModalClass},[React.DOM.div({className:"modal-content"},[React.DOM.div({className:"modal-header"},[React.DOM.div({className:"close",type:"button",onClick:this.handleCancel,dangerouslySetInnerHTML:{__html:"&times"}}),React.DOM.h1({},this.props.title)]),React.DOM.div({className:"modal-body"},this.props.children),React.DOM.div({className:"modal-footer"},[b,a])])])])},handleCancel:function(){this.props.onCancel&&this.props.onCancel(this.close)},handleConfirm:function(){this.props.onConfirm&&this.props.onConfirm(this.close)}}),GenerateRandomId=function(){for(var a="",b="abcdefghijklmnopqrstuvwxyz0123456789",c=0;4>c;c++)a+=b.charAt(Math.floor(Math.random()*b.length));return a},TextInput=React.createClass({getInitialState:function(){return{randomId:this.props.name+"-"+GenerateRandomId()}},onChange:function(){"function"==typeof this.props.onChange&&this.props.onChange(this.refs.field.getDOMNode().value,this.props.name)},render:function(){return this.props.extraClass="undefined"==typeof this.props.extraClass?"":" "+this.props.extraClass,React.DOM.div({className:"form-group "+this.props.name+"-line"+this.props.extraClass,children:[React.DOM.label({htmlFor:this.state.randomId},this.props.label),React.DOM.input({type:"text",ref:"field",className:"form-control",id:this.state.randomId,name:this.props.name,autoComplete:"off",placeholder:this.props.placeholder,onChange:this.onChange,value:this.props.value})]})}}),Textarea=React.createClass({getInitialState:function(){return{randomId:this.props.name+"-"+GenerateRandomId()}},onChange:function(){"function"==typeof this.props.onChange&&this.props.onChange(this.refs.field.getDOMNode().value,this.props.name)},render:function(){return this.props.extraClass="undefined"==typeof this.props.extraClass?"":" "+this.props.extraClass,"undefined"==typeof this.props.rows&&(this.props.rows=3),React.DOM.div({className:"form-group "+this.props.name+"-line"+this.props.extraClass,children:[React.DOM.label({htmlFor:this.state.randomId},this.props.label),React.DOM.textarea({className:"form-control",ref:"field",id:this.state.randomId,rows:this.props.rows,name:this.props.name,onChange:this.onChange},this.props.value)]})}}),SubmitButton=React.createClass({render:function(){return this.props.extraClass="undefined"==typeof this.props.extraClass?"":" "+this.props.extraClass,React.DOM.button({disabled:this.props.disabled?"disabled":"",className:"btn"+this.props.extraClass,onClick:this.props.onClick},this.props.label)}}),SelectDropdown=React.createClass({getInitialState:function(){return{randomId:this.props.name+"-"+GenerateRandomId()}},onChange:function(){"function"==typeof this.props.onChange&&this.props.onChange(parseInt(jQuery("option:selected",jQuery(this.refs.field.getDOMNode())).val(),10),this.props.name)},render:function(){this.props.extraClass="undefined"==typeof this.props.extraClass?"":" "+this.props.extraClass;var a=this,b=this.props.options.map(function(b){var c={};return a.props.value==b.value&&(c.selected="selected"),c.value=b.value,React.DOM.option(c,b.text)});return React.DOM.div({className:"form-group "+this.props.name+"-line"+this.props.extraClass},[React.DOM.label({htmlFor:this.state.randomId},this.props.label),React.DOM.select({ref:"field",className:"form-control",id:this.state.randomId,name:this.props.name,onChange:this.onChange},b)])}}),CheckboxGroup=React.createClass({onChange:function(){if("function"==typeof this.props.onChange){var a=jQuery("input[type=checkbox]").filter(function(a,b){return jQuery(b).is(":checked")}).map(function(a,b){return parseInt(jQuery(b).val(),10)}).toArray();this.props.onChange(a,this.props.name)}},render:function(){this.props.extraClass="undefined"==typeof this.props.extraClass?"":" "+this.props.extraClass;var a=this,b=this.props.options.map(function(b){return a.props.value.indexOf(b.value)>-1&&(b.checked=!0),b.onChange=a.onChange,Checkbox(b)});return React.DOM.div({className:"form-group "+this.props.name+"-line"+this.props.extraClass},[React.DOM.label({},this.props.label),React.DOM.div({},b)])}}),Checkbox=React.createClass({render:function(){return React.DOM.label({className:"checkbox-inline",children:[React.DOM.input({type:"checkbox",checked:this.props.checked,value:this.props.value,onChange:this.props.onChange})," "+this.props.text]})}}),RiskDialog=React.createClass({defaultEmptyRisk:function(){return"undefined"!=typeof this.props.risk?this.props.risk:{id:null,name:"",probability:1,impact:1,areas:[],plan:"",status:0}},getInitialState:function(){return{risk:this.defaultEmptyRisk()}},render:function(){var a=Dialog({ref:"riskDialog",confirm:"Save",cancel:"Cancel",extraModalClass:"modal-lg",onCancel:this.handleCancel,onConfirm:this.handleConfirm,title:"Add new Risk",children:[React.DOM.div({},[React.DOM.div({className:"row"},[TextInput({label:"Risk title",placeholder:"Source, summary or something that clearly identifies this risk...",name:"name",extraClass:"col-md-12",onChange:this.changeFormField,value:this.state.risk.name})]),React.DOM.div({className:"row"},[SelectDropdown({label:"Probability of risk source happening",name:"probability",extraClass:"col-md-6",onChange:this.changeFormField,value:this.state.risk.probability,options:[{value:1,text:"1 (Low)      Almost impossible"},{value:2,text:"2 (Low)      There is a minimal chance"},{value:3,text:"3 (Low)      This can even be done"},{value:4,text:"4 (Medium)   Have a chance"},{value:5,text:"5 (Medium)   We have to deal with this soon"},{value:6,text:"6 (Medium)   This week let's talk about it"},{value:7,text:"7 (High)     We need to talk about it in a few days"},{value:8,text:"8 (High)     We need to talk about it today"},{value:9,text:"9 (High)     We need to talk about it now!"}]}),SelectDropdown({label:"Impact on project if risk source happens",name:"impact",extraClass:"col-md-6",onChange:this.changeFormField,value:this.state.risk.impact,options:[{value:1,text:"1 (Low)      "},{value:2,text:"2 (Low)      "},{value:3,text:"3 (Low)      "},{value:4,text:"4 (Medium)   "},{value:5,text:"5 (Medium)   "},{value:6,text:"6 (Medium)   "},{value:7,text:"7 (High)     "},{value:8,text:"8 (High)     "},{value:9,text:"9 (High)     "}]})]),React.DOM.div({className:"row"},[CheckboxGroup({label:"Project Impacts",name:"areas",extraClass:"col-md-6",onChange:this.changeFormField,value:this.state.risk.areas,options:[{value:0,text:"Cost"},{value:1,text:"Schedule"},{value:2,text:"Performance"}]}),SelectDropdown({label:"Status",name:"status",extraClass:"col-md-6",onChange:this.changeFormField,value:this.state.risk.status,options:[{value:0,text:"New"},{value:1,text:"Pending"},{value:2,text:"Closed"}]})]),React.DOM.div({className:"row"},[Textarea({label:"Mitigation / Response plan",rows:5,name:"plan",extraClass:"col-md-12",onChange:this.changeFormField,value:this.state.risk.plan})])])]});return a},open:function(){this.refs.riskDialog.open()},handleCancel:function(a){a()},handleConfirm:function(a){return jQuery.post(getHtmlParam("risks-endpoint"),this.state.risk,function(){return a()},"json")},changeFormField:function(a,b){this.state.risk[b]=a,this.setState({risk:this.state.risk})}}),RiskImpact=React.createClass({render:function(){return React.DOM.span({className:"label label-success"},this.props.impact)}}),RiskLine=React.createClass({getInitialState:function(){return{statusList:["danger","warning","success"]}},getRowClass:function(a){return this.state.statusList.length<1+a?"":this.state.statusList[a]},render:function(){return React.DOM.tr({className:this.getRowClass(this.props.risk.status.id)},[React.DOM.td({},this.props.risk.id),React.DOM.td({},this.props.risk.name),React.DOM.td({},this.props.risk.owner.name),React.DOM.td({className:"text-center"},[this.props.risk.probability<4?RiskProbability({probability:this.props.risk.probability}):null]),React.DOM.td({className:"text-center"},[this.props.risk.probability>3&&this.props.risk.probability<7?RiskProbability({probability:this.props.risk.probability}):null]),React.DOM.td({className:"text-center"},[this.props.risk.probability>6?RiskProbability({probability:this.props.risk.probability}):null]),React.DOM.td({className:"text-center"},[this.props.risk.impact<4?RiskImpact({impact:this.props.risk.impact}):null]),React.DOM.td({className:"text-center"},[this.props.risk.impact>3&&this.props.risk.impact<7?RiskImpact({impact:this.props.risk.impact}):null]),React.DOM.td({className:"text-center"},[this.props.risk.impact>6?RiskImpact({impact:this.props.risk.impact}):null]),React.DOM.td({className:"text-center"},this.props.risk.probability*this.props.risk.impact),React.DOM.td({className:"impact-area text-center"},this.props.risk.areas.indexOf(0)>-1?"X":""),React.DOM.td({className:"impact-area text-center"},this.props.risk.areas.indexOf(1)>-1?"X":""),React.DOM.td({className:"impact-area text-center"},this.props.risk.areas.indexOf(2)>-1?"X":""),React.DOM.td({},this.props.risk.plan),React.DOM.td({},RiskStatus({status:this.props.risk.status})),React.DOM.td({},"[action]")])}}),RiskList=React.createClass({getInitialState:function(){return{risks:[]}},loadRiskList:function(){var a=this;jQuery.get(getHtmlParam("risks-endpoint"),function(b){a.setState({risks:b}),setTimeout(a.loadRiskList,1e3)},"json")},componentDidMount:function(){this.loadRiskList()},render:function(){var a=this.state.risks.map(function(a){return RiskLine({risk:a})});return EventSystem.publish("risk.count.update",this.state.risks.length),React.DOM.table({className:"table table-hover table-bordered risk-table"},[React.DOM.thead({},[React.DOM.tr({},[React.DOM.td({colSpan:3}),React.DOM.td({className:"text-center",colSpan:3},"Probability"),React.DOM.td({className:"text-center",colSpan:3},"Impact"),React.DOM.td({}),React.DOM.td({className:"text-center",colSpan:3},"Impact areas"),React.DOM.td({colSpan:3})]),React.DOM.tr({},[React.DOM.td({}),React.DOM.td({},"Source"),React.DOM.td({}),React.DOM.td({className:"list-section-left"},"Low"),React.DOM.td({className:"list-section-center"},"Medium"),React.DOM.td({className:"list-section-right"},"High"),React.DOM.td({className:"list-section-left"},"Low"),React.DOM.td({className:"list-section-center"},"Medium"),React.DOM.td({className:"list-section-right"},"High"),React.DOM.td({},"Result"),React.DOM.td({className:"list-section-left"},"Cost"),React.DOM.td({className:"list-section-center"},"Schedule"),React.DOM.td({className:"list-section-right"},"Performance"),React.DOM.td({},"Plan"),React.DOM.td({},"Status"),React.DOM.td({})])]),React.DOM.tbody({},a)])}}),RiskPage=React.createClass({updateRiskCount:function(a){this.setState({riskCount:a})},componentDidMount:function(){EventSystem.subscribe("risk.count.update",this.updateRiskCount)},getInitialState:function(){return{riskCount:0}},render:function(){return React.DOM.div({},[React.DOM.button({className:"btn btn-success pull-right",onClick:this.openNewRiskDialog},[React.DOM.span({className:"glyphicon glyphicon-plus"})," Add new Risk"]),React.DOM.h1({className:"page-header"},[React.DOM.span({},"Risk Register "),React.DOM.small({},this.riskCountText())]),RiskList({}),RiskDialog({ref:"riskDialog"})])},riskCountText:function(){return this.state.riskCount<1?"":this.state.riskCount<2?this.state.riskCount+" risk":this.state.riskCount+" risks"},openNewRiskDialog:function(){this.refs.riskDialog.open()}}),RiskProbability=React.createClass({getInitialState:function(){return{statusList:["label-danger","label-warning","label-success"]}},getLabelClass:function(a){return 4>a?"label-success":a>6?"label-danger":"label-warning"},render:function(){return React.DOM.span({className:"label "+this.getLabelClass(this.props.probability)},this.props.probability)}}),RiskStatus=React.createClass({getInitialState:function(){return{statusList:["label-danger","label-warning","label-success"]}},getLabelClass:function(a){return this.state.statusList.length<1+a&&(a=0),this.state.statusList[a]},render:function(){return React.DOM.span({className:"label "+this.getLabelClass(this.props.status.id)},this.props.status.name)}}),EventSystem=function(){var a=this;return a.queue={},{publish:function(b,c){var d=a.queue[b];if("undefined"==typeof d)return!1;for(;d.length>0;)d.shift()(c);return!0},subscribe:function(b,c){"undefined"==typeof a.queue[b]&&(a.queue[b]=[]),a.queue[b].push(c)}}}(),getHtmlParam=function(a){return jQuery('param[name="'+a+'"]').attr("value")};React.renderComponent(RiskPage({}),document.getElementById("risk-page"));
